[{"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/App.js":"1","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Navbar.js":"2","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/Dashboard.js":"3","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/routing/PrivateRoute.js":"4","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/alert.js":"5","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/types.js":"6","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Spinner.js":"7","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/index.js":"8","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/auth.js":"9","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/auth.js":"10","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Landing.js":"11","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/EditProfile.js":"12","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/alert.js":"13","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/profile.js":"14","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/profile.js":"15","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddExperience.js":"16","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddEducation.js":"17","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/index.js":"18","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/auth/Login.js":"19","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/CreateProfile.js":"20"},{"size":2427,"mtime":1606140212029,"results":"21","hashOfConfig":"22"},{"size":1426,"mtime":1606136131483,"results":"23","hashOfConfig":"22"},{"size":1452,"mtime":1606136131481,"results":"24","hashOfConfig":"22"},{"size":631,"mtime":1606136131486,"results":"25","hashOfConfig":"22"},{"size":353,"mtime":1606136131479,"results":"26","hashOfConfig":"22"},{"size":565,"mtime":1606137687742,"results":"27","hashOfConfig":"22"},{"size":265,"mtime":1606136131483,"results":"28","hashOfConfig":"22"},{"size":347,"mtime":1606136131490,"results":"29","hashOfConfig":"22"},{"size":1176,"mtime":1606136131490,"results":"30","hashOfConfig":"22"},{"size":2106,"mtime":1606136131479,"results":"31","hashOfConfig":"22"},{"size":1112,"mtime":1606136131483,"results":"32","hashOfConfig":"22"},{"size":8140,"mtime":1606136131486,"results":"33","hashOfConfig":"22"},{"size":584,"mtime":1606136131490,"results":"34","hashOfConfig":"22"},{"size":3008,"mtime":1606137977755,"results":"35","hashOfConfig":"22"},{"size":733,"mtime":1606138015396,"results":"36","hashOfConfig":"22"},{"size":3417,"mtime":1606139572757,"results":"37","hashOfConfig":"22"},{"size":3423,"mtime":1606140118086,"results":"38","hashOfConfig":"22"},{"size":197,"mtime":1606136131489,"results":"39","hashOfConfig":"22"},{"size":1877,"mtime":1606136131480,"results":"40","hashOfConfig":"22"},{"size":6062,"mtime":1606136131485,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11tsyrh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/App.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Navbar.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/Dashboard.js",["89"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user' />\n        Welcome {user && user.user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment><DashboardActions></DashboardActions></Fragment>\n      ) : (\n        <Fragment>\n          {' '}\n          <p>You have not yet set up the profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            {' '}\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n",["90","91"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/routing/PrivateRoute.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/alert.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/types.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Spinner.js",["92"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n    <Fragment>\n        <img src={spinner}\n        style={{width: '200px', margin: 'auto', display: 'block'}}\n        alt='loading...'\n        />\n    </Fragment>\n);","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/index.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/auth.js",["93"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/auth.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Landing.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/EditProfile.js",["94","95"],"import React, { useState, Fragment, useEffect } from 'react';\n//withRouter is used to pass the history object in\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n      getCurrentProfile();\n\n      setFormData({\n          company: loading || !profile.company ? '' : profile.company,\n          website: loading || !profile.website ? '' : profile.website,\n          location: loading || !profile.location ? '' : profile.location,\n          status: loading || !profile.status ? '' : profile.status,\n          skills: loading || !profile.skills ? '' : profile.skills.join(','),\n          githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n          bio: loading || !profile.bio ? '' : profile.bio,\n          twitter: loading || !profile.social ? '' : profile.social.twitter,\n          facebook: loading || !profile.social ? '' : profile.social.facebook,\n          linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n          youtube: loading || !profile.social ? '' : profile.social.youtube,\n          instagram: loading || !profile.social ? '' : profile.social.instagram\n      });\n  }, [loading]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make\n        yourprofile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg.HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include\n            yourusername\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <a className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/alert.js",["96"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/profile.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/profile.js",["97"],"import { CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddExperience.js",["98"],"import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n  const [toDataDisabled, toggleDisabled] = useState(false);\n  const {company, title, location, from, to, current, description} = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n      e.preventDefault();\n      addExperience(formData, history);\n  }\n  return (\n    <Fragment>\n      <h1 class='large text-primary'>Add An Experience</h1>\n      <p class='lead'>\n        <i class='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form class='form' onSubmit={e => onSubmit(e)}>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              checked={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDataDisabled);\n              }}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>To Date</h4>\n          <input\n          disabled={toDataDisabled ? 'disabled': ''}\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            value={description}\n            onChange={(e) => onChange(e)}\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n          ></textarea>\n        </div>\n        <input type='submit' class='btn btn-primary my-1' />\n        <a class='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {addExperience})(withRouter(AddExperience));\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddEducation.js",["99","100"],"import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n  const [toDataDisabled, toggleDisabled] = useState(false);\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addEducation(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 class='large text-primary'>Add Your Education</h1>\n      <p class='lead'>\n        <i class='fas fa-graduation-cap'></i> Add any school, bootcamp, etc that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form class='form' onSubmit={e => onSubmit(e)}>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Field Of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDataDisabled);\n              }}\n            />{' '}\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            disabled={toDataDisabled ? 'disabled' : ''}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n          ></textarea>\n        </div>\n        <input type='submit' class='btn btn-primary my-1' />\n        <a class='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/index.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/auth/Login.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/CreateProfile.js",["101","102","103"],{"ruleId":"104","severity":1,"message":"105","line":16,"column":6,"nodeType":"106","endLine":16,"endColumn":8,"suggestions":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":1,"nodeType":"114","endLine":11,"endColumn":3},{"ruleId":"112","severity":1,"message":"115","line":19,"column":1,"nodeType":"114","endLine":52,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"120","line":48,"column":6,"nodeType":"106","endLine":48,"endColumn":15,"suggestions":"121"},{"ruleId":"112","severity":1,"message":"115","line":7,"column":1,"nodeType":"114","endLine":19,"endColumn":2},{"ruleId":"112","severity":1,"message":"115","line":11,"column":1,"nodeType":"114","endLine":38,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"122","line":25,"column":5,"nodeType":"118","messageId":"119","endLine":25,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":13},{"ruleId":"116","severity":1,"message":"123","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":13},{"ruleId":"116","severity":1,"message":"124","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["128"],"'description' is assigned a value but never used.","'set' is defined but never used.","'createFactory' is defined but never used.",{"desc":"129","fix":"130"},"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"133","text":"134"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"135","text":"136"},[471,473],"[getCurrentProfile]",[1749,1758],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]