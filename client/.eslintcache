[{"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/App.js":"1","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profiles/Profiles.js":"2","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Navbar.js":"3","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/profile.js":"4","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profiles/ProfileItem.js":"5","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/auth.js":"6","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/auth/Register.js":"7","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddEducation.js":"8","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Alert.js":"9","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/types.js":"10","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/profile.js":"11","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/index.js":"12","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/auth.js":"13","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/Profile.js":"14","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileTop.js":"15","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileAbout.js":"16","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileExperience.js":"17","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileEducation.js":"18","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/store.js":"19","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/CreateProfile.js":"20","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Landing.js":"21","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/DashboardActions.js":"22","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/alert.js":"23","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/auth/Login.js":"24","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddExperience.js":"25","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/alert.js":"26","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/Experience.js":"27","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileGithub.js":"28","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/post.js":"29","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/post.js":"30","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/posts/Posts.js":"31","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/posts/PostItem.js":"32","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/utils/setAuthToken.js":"33","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Spinner.js":"34","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/posts/PostForm.js":"35","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/routing/PrivateRoute.js":"36","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/Education.js":"37","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/post/Post.js":"38","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/post/CommentForm.js":"39","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/post/CommentItem.js":"40"},{"size":2903,"mtime":1609245083012,"results":"41","hashOfConfig":"42"},{"size":1153,"mtime":1607325557315,"results":"43","hashOfConfig":"42"},{"size":1560,"mtime":1608470386329,"results":"44","hashOfConfig":"42"},{"size":998,"mtime":1607324802541,"results":"45","hashOfConfig":"42"},{"size":995,"mtime":1607326144345,"results":"46","hashOfConfig":"42"},{"size":2106,"mtime":1606136131479,"results":"47","hashOfConfig":"42"},{"size":2839,"mtime":1606136131480,"results":"48","hashOfConfig":"42"},{"size":3423,"mtime":1606140118086,"results":"49","hashOfConfig":"42"},{"size":480,"mtime":1606136131482,"results":"50","hashOfConfig":"42"},{"size":1020,"mtime":1609245759329,"results":"51","hashOfConfig":"42"},{"size":5739,"mtime":1608200803596,"results":"52","hashOfConfig":"42"},{"size":384,"mtime":1608201630283,"results":"53","hashOfConfig":"42"},{"size":1227,"mtime":1607317576904,"results":"54","hashOfConfig":"42"},{"size":2728,"mtime":1608200782247,"results":"55","hashOfConfig":"42"},{"size":1881,"mtime":1608030216729,"results":"56","hashOfConfig":"42"},{"size":801,"mtime":1608031006317,"results":"57","hashOfConfig":"42"},{"size":716,"mtime":1608040776584,"results":"58","hashOfConfig":"42"},{"size":777,"mtime":1608041467090,"results":"59","hashOfConfig":"42"},{"size":559,"mtime":1606136131491,"results":"60","hashOfConfig":"42"},{"size":6062,"mtime":1606136131485,"results":"61","hashOfConfig":"42"},{"size":1112,"mtime":1606136131483,"results":"62","hashOfConfig":"42"},{"size":621,"mtime":1606136131481,"results":"63","hashOfConfig":"42"},{"size":584,"mtime":1606136131490,"results":"64","hashOfConfig":"42"},{"size":1877,"mtime":1606136131480,"results":"65","hashOfConfig":"42"},{"size":3417,"mtime":1606139572757,"results":"66","hashOfConfig":"42"},{"size":353,"mtime":1606136131479,"results":"67","hashOfConfig":"42"},{"size":1347,"mtime":1607319881437,"results":"68","hashOfConfig":"42"},{"size":1624,"mtime":1608201023058,"results":"69","hashOfConfig":"42"},{"size":1537,"mtime":1609246231476,"results":"70","hashOfConfig":"42"},{"size":3601,"mtime":1609247847083,"results":"71","hashOfConfig":"42"},{"size":1012,"mtime":1608471733942,"results":"72","hashOfConfig":"42"},{"size":2493,"mtime":1609245430822,"results":"73","hashOfConfig":"42"},{"size":364,"mtime":1606136131491,"results":"74","hashOfConfig":"42"},{"size":265,"mtime":1606136131483,"results":"75","hashOfConfig":"42"},{"size":1034,"mtime":1608471813246,"results":"76","hashOfConfig":"42"},{"size":631,"mtime":1606136131486,"results":"77","hashOfConfig":"42"},{"size":1448,"mtime":1607319329143,"results":"78","hashOfConfig":"42"},{"size":1183,"mtime":1609246923299,"results":"79","hashOfConfig":"42"},{"size":1109,"mtime":1609246560475,"results":"80","hashOfConfig":"42"},{"size":1457,"mtime":1609247928328,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11tsyrh",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"87"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"87"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"87"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/App.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profiles/Profiles.js",["179"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem'\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Developers</h1>\n      <p className='lead'>\n        <i className='fab fa-connectdevelop'></i> Browse and connect with developers\n      </p>\n      <div className='profiles'>\n        {profiles.length > 0 ? (\n          profiles.map((profile) => (\n            <ProfileItem key={profile._id} profile={profile} />\n          ))\n        ) : (\n          <h4>No profiles found ...</h4>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n",["180","181"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Navbar.js",[],["182","183"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/profile.js",["184"],"import {\n  CLEAR_PROFILE,\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n",["185","186"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profiles/ProfileItem.js",["187"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt='' className='round-img'></img>\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'> {location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>View Profile</Link>\n      </div>\n      <ul>\n          {skills.splice(0, 4).map((skill, index) => (\n              <li key={index} className='text-primary'>\n                  <i className='fas fa-check'></i>{skill}\n              </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/auth.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/auth/Register.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddEducation.js",["188","189"],"import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n  const [toDataDisabled, toggleDisabled] = useState(false);\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addEducation(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 class='large text-primary'>Add Your Education</h1>\n      <p class='lead'>\n        <i class='fas fa-graduation-cap'></i> Add any school, bootcamp, etc that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form class='form' onSubmit={e => onSubmit(e)}>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Field Of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDataDisabled);\n              }}\n            />{' '}\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            disabled={toDataDisabled ? 'disabled' : ''}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n          ></textarea>\n        </div>\n        <input type='submit' class='btn btn-primary my-1' />\n        <a class='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Alert.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/types.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/profile.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/index.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/auth.js",["190"],"import { REGISTER_SUCCESS,\n        REGISTER_FAIL,\n        USER_LOADED,\n        AUTH_ERROR,\n        LOGIN_SUCCESS,\n        LOGIN_FAIL,\n        LOGOUT,\n        ACCOUNT_DELETED\n} from '../actions/types';\n\n//loading is done when make request to backend,\n//it will be set to false when loaded\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      }\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n            ...state,\n            ...payload,\n            isAuthenticated: true,\n            loading: false\n        };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n        localStorage.removeItem('token');\n        return {\n            ...state,\n            token: null,\n            isAuthenticated: false,\n            loading: false\n        };\n    default:\n      return state;\n  }\n}\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/Profile.js",["191"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileGithub from './ProfileGithub';\nimport ProfileExperience from './ProfileExperience';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileEducation from './ProfileEducation';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div class='profile-exp bg-white p-2'>\n              <h2 class='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((exp) => (\n                    <ProfileExperience key={exp._id} experience={exp} />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n            <div class='profile-edu bg-white p-2'>\n              <h2 class='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((edu) => (\n                    <ProfileEducation key={edu._id} education={edu} />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n            <div>\n              {profile.githubusername && (<ProfileGithub username={profile.githubusername}/>)}\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileTop.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileAbout.js",["192"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => {\n  return (\n    <Fragment>\n      <div class='profile-about bg-light p-2'>\n        {bio && (\n          <Fragment>\n            <h2 class='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\n            <p>{bio}</p>\n            <div class='line'></div>\n          </Fragment>\n        )}\n\n        <h2 class='text-primary'>Skill Set</h2>\n        <div class='skills'>\n        {skills.map((skill, index) => (\n            <div key={index} class='p-1'>\n            <i class='fa fa-check'></i> {skill}\n          </div>\n        ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nProfileAbout.propTypes = {};\n\nexport default ProfileAbout;\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileExperience.js",["193"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => {\n    console.log(company)\n  return (\n    <Fragment>\n      <h3 class='text-dark'>{company}</h3>\n      <p>\n        <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\n        {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n      </p>\n      <p>\n        <strong>Position: </strong>\n        {title}\n      </p>\n      <p>\n        <strong>Description: </strong>\n        {description}\n      </p>\n    </Fragment>\n  );\n};\n\nProfileExperience.propTypes = {};\n\nexport default ProfileExperience;\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileEducation.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/store.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/CreateProfile.js",["194","195","196"],"import React, { useState, Fragment } from 'react';\n//withRouter is used to pass the history object in\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { set } from 'mongoose';\nimport { createProfile } from '../../actions/profile';\nimport { createFactory } from 'react';\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history)\n  }\n\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make\n        yourprofile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input type='text' placeholder='Company' name='company' value={company} onChange={e => onChange(e)}/>\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input type='text' placeholder='Website' name='website' value={website} onChange={e => onChange(e)}/>\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input type='text' placeholder='Location' name='location' value={location} onChange={e => onChange(e)}/>\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input type='text' placeholder='* Skills' name='skills' value={skills} onChange={e => onChange(e)}/>\n          <small className='form-text'>\n            Please use comma separated values (eg.HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername} onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include\n            yourusername\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea placeholder='A short bio of yourself' name='bio' value={bio} onChange={e => onChange(e)}></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input type='text' placeholder='Twitter URL' name='twitter' value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input type='text' placeholder='Facebook URL' name='facebook' value={facebook} onChange={e => onChange(e)} />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input type='text' placeholder='YouTube URL' name='youtube' value={youtube} onChange={e => onChange(e)} />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input type='text' placeholder='Linkedin URL' name='linkedin' value={linkedin} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input type='text' placeholder='Instagram URL' name='instagram' value={instagram} onChange={e => onChange(e)}/>\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <a className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n};\n\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Landing.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/DashboardActions.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/alert.js",["197"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/auth/Login.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile-format/AddExperience.js",["198"],"import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n  const [toDataDisabled, toggleDisabled] = useState(false);\n  const {company, title, location, from, to, current, description} = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n      e.preventDefault();\n      addExperience(formData, history);\n  }\n  return (\n    <Fragment>\n      <h1 class='large text-primary'>Add An Experience</h1>\n      <p class='lead'>\n        <i class='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form class='form' onSubmit={e => onSubmit(e)}>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              checked={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDataDisabled);\n              }}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>To Date</h4>\n          <input\n          disabled={toDataDisabled ? 'disabled': ''}\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            value={description}\n            onChange={(e) => onChange(e)}\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n          ></textarea>\n        </div>\n        <input type='submit' class='btn btn-primary my-1' />\n        <a class='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {addExperience})(withRouter(AddExperience));\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/alert.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/Experience.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/profile/ProfileGithub.js",["199","200"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return (\n    <div class='profile-github'>\n      <h2 class='text-primary my-1'>\n        <i class='fab fa-github'></i> Github Repos\n      </h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo) => (\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                  {repo.name}\n                </a>\n              </h4>\n              <p>\n                {repo.description}\n              </p>\n            </div>\n            <div>\n              <ul>\n                <li class=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\n                <li class=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\n                <li class=\"badge badge-light\">Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/reducers/post.js",["201"],"import {\n  ADD_POST,\n  DELETE_POST,\n  GET_POST,\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload},\n        loading: false\n      }\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post,\n        comments: state.post.comments.filter( comment => comment._id !== payload )},\n        loading: false\n      }\n    default:\n      return state;\n  }\n}\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/actions/post.js",["202"],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/posts/Posts.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/posts/PostItem.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/utils/setAuthToken.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/layout/Spinner.js",["203"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n    <Fragment>\n        <img src={spinner}\n        style={{width: '200px', margin: 'auto', display: 'block'}}\n        alt='loading...'\n        />\n    </Fragment>\n);","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/posts/PostForm.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/routing/PrivateRoute.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/dashboard/Education.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/post/Post.js",["204"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport { getPost } from '../../actions/post';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem'\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Go Back to Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\nexport default connect(mapStateToProps, { getPost })(Post);\n","/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/post/CommentForm.js",[],"/Users/jadenguyen/Jade Uni/Udemy/Web-Angela/WorkerWeb/client/src/components/post/CommentItem.js",[],{"ruleId":"205","severity":1,"message":"206","line":11,"column":6,"nodeType":"207","endLine":11,"endColumn":8,"suggestions":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"209","replacedBy":"213"},{"ruleId":"211","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":18,"column":1,"nodeType":"217","endLine":57,"endColumn":2},{"ruleId":"209","replacedBy":"218"},{"ruleId":"211","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"224","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"225","line":25,"column":5,"nodeType":"222","messageId":"223","endLine":25,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":20,"column":1,"nodeType":"217","endLine":54,"endColumn":2},{"ruleId":"205","severity":1,"message":"226","line":21,"column":6,"nodeType":"207","endLine":21,"endColumn":22,"suggestions":"227"},{"ruleId":"220","severity":1,"message":"228","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":17},{"ruleId":"220","severity":1,"message":"228","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":17},{"ruleId":"220","severity":1,"message":"224","line":3,"column":9,"nodeType":"222","messageId":"223","endLine":3,"endColumn":13},{"ruleId":"220","severity":1,"message":"229","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":13},{"ruleId":"220","severity":1,"message":"230","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":7,"column":1,"nodeType":"217","endLine":19,"endColumn":2},{"ruleId":"220","severity":1,"message":"224","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"231","line":10,"column":6,"nodeType":"207","endLine":10,"endColumn":22,"suggestions":"232"},{"ruleId":"215","severity":1,"message":"216","line":19,"column":1,"nodeType":"217","endLine":76,"endColumn":2},{"ruleId":"220","severity":1,"message":"233","line":68,"column":11,"nodeType":"222","messageId":"223","endLine":68,"endColumn":14},{"ruleId":"215","severity":1,"message":"234","line":4,"column":1,"nodeType":"217","endLine":11,"endColumn":3},{"ruleId":"205","severity":1,"message":"226","line":14,"column":6,"nodeType":"207","endLine":14,"endColumn":15,"suggestions":"235"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["236"],"no-native-reassign",["237"],"no-negated-in-lhs",["238"],["237"],["238"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["237"],["238"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'description' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["239"],"'PropTypes' is defined but never used.","'set' is defined but never used.","'createFactory' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["240"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default",["241"],{"desc":"242","fix":"243"},"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [getProfiles]",{"range":"250","text":"251"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"252","text":"253"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"254","text":"255"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"256","text":"257"},[378,380],"[getProfiles]",[654,670],"[getProfileById, match.params.id]",[345,361],"[getGithubRepos, username]",[498,507],"[getPost, match.params.id]"]